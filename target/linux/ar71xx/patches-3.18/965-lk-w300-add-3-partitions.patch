diff --git a/arch/mips/ath79/mach-tl-wr841n-v9.c b/arch/mips/ath79/mach-tl-wr841n-v9.c
old mode 100644
new mode 100755
index c28afc6..ca69264
--- a/arch/mips/ath79/mach-tl-wr841n-v9.c
+++ b/arch/mips/ath79/mach-tl-wr841n-v9.c
@@ -19,19 +19,20 @@
 #include "dev-gpio-buttons.h"
 #include "dev-leds-gpio.h"
 #include "dev-m25p80.h"
+#include "dev-usb.h"
 #include "dev-wmac.h"
 #include "machtypes.h"
 
 #define TL_WR841NV9_GPIO_LED_WLAN	13
 #define TL_WR841NV9_GPIO_LED_QSS	3
 #define TL_WR841NV9_GPIO_LED_WAN	4
-#define TL_WR841NV9_GPIO_LED_LAN1	16
+#define TL_WR841NV9_GPIO_LED_LAN1	17 //16
 #define TL_WR841NV9_GPIO_LED_LAN2	15
 #define TL_WR841NV9_GPIO_LED_LAN3	14
 #define TL_WR841NV9_GPIO_LED_LAN4	11
 
 #define TL_WR841NV9_GPIO_BTN_RESET	12
-#define TL_WR841NV9_GPIO_BTN_WIFI	17
+#define TL_WR841NV9_GPIO_BTN_WIFI	16 //17
 
 #define TL_WR841NV9_KEYS_POLL_INTERVAL	20	/* msecs */
 #define TL_WR841NV9_KEYS_DEBOUNCE_INTERVAL (3 * TL_WR841NV9_KEYS_POLL_INTERVAL)
@@ -109,12 +110,18 @@ static void __init tl_ap143_setup(void)
 	ath79_register_mdio(0, 0x0);
 
 	/* LAN */
+	ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+	ath79_eth1_data.duplex = DUPLEX_FULL;
+	ath79_switch_data.phy_poll_mask |= BIT(4);
 	ath79_init_mac(ath79_eth1_data.mac_addr, mac, 0);
 	ath79_register_eth(1);
 
 	/* WAN */
 	ath79_switch_data.phy4_mii_en = 1;
 	ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_MII;
+	ath79_eth0_data.duplex = DUPLEX_FULL;
+	ath79_eth0_data.speed = SPEED_100;
+	ath79_eth0_data.phy_mask = BIT(4);
 	ath79_init_mac(ath79_eth0_data.mac_addr, mac, 1);
 	ath79_register_eth(0);
 
@@ -132,6 +139,7 @@ static void __init tl_wr841n_v9_setup(void)
 	ath79_register_gpio_keys_polled(1, TL_WR841NV9_KEYS_POLL_INTERVAL,
 					ARRAY_SIZE(tl_wr841n_v9_gpio_keys),
 					tl_wr841n_v9_gpio_keys);
+    ath79_register_usb();
 }
 
 MIPS_MACHINE(ATH79_MACH_TL_WR841N_V9, "TL-WR841N-v9", "TP-LINK TL-WR841N/ND v9",
diff --git a/drivers/mtd/tplinkpart.c b/drivers/mtd/tplinkpart.c
index 29fd3a8..7092654 100644
--- a/drivers/mtd/tplinkpart.c
+++ b/drivers/mtd/tplinkpart.c
@@ -16,7 +16,7 @@
 #include <linux/mtd/mtd.h>
 #include <linux/mtd/partitions.h>
 
-#define TPLINK_NUM_PARTS	5
+#define TPLINK_NUM_PARTS	8
 #define TPLINK_HEADER_V1	0x01000000
 #define MD5SUM_LEN		16
 
@@ -117,6 +117,9 @@ static int tplink_parse_partitions(struct mtd_info *master,
 	size_t art_offset;
 	size_t rootfs_offset;
 	size_t squashfs_offset;
+    const int log_sz = 1024*1024;
+    const int data_sz = 1024*1024;
+    const int admin_sz = 64*1024;
 	int ret;
 
 	nr_parts = TPLINK_NUM_PARTS;
@@ -157,16 +160,28 @@ static int tplink_parse_partitions(struct mtd_info *master,
 
 	parts[2].name = "rootfs";
 	parts[2].offset = rootfs_offset;
-	parts[2].size = art_offset - rootfs_offset;
+	parts[2].size = art_offset - rootfs_offset - log_sz - data_sz - admin_sz;
 
-	parts[3].name = "art";
-	parts[3].offset = art_offset;
-	parts[3].size = TPLINK_ART_LEN;
+    parts[3].name = "log";
+    parts[3].offset = art_offset - log_sz - data_sz - admin_sz;
+    parts[3].size = log_sz;
+
+    parts[4].name = "data";
+    parts[4].offset = art_offset - data_sz - admin_sz;
+    parts[4].size = data_sz;
+
+    parts[5].name = "admin";
+    parts[5].offset = art_offset - admin_sz;
+    parts[5].size = admin_sz;
+
+	parts[6].name = "art";
+	parts[6].offset = art_offset;
+	parts[6].size = TPLINK_ART_LEN;
 	//parts[3].mask_flags = MTD_WRITEABLE;
 
-	parts[4].name = "firmware";
-	parts[4].offset = offset;
-	parts[4].size = art_offset - offset;
+	parts[7].name = "firmware";
+	parts[7].offset = offset;
+	parts[7].size = art_offset - offset;
 
 	vfree(header);
 
